// <auto-generated />
using ManyToManyApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManyToManyApi.Migrations
{
    [DbContext(typeof(StudentCourseContext))]
    partial class StudentCourseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManyToManyApi.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 101,
                            Title = "Mathematics"
                        },
                        new
                        {
                            CourseId = 102,
                            Title = "Physics"
                        },
                        new
                        {
                            CourseId = 103,
                            Title = "Computer Science"
                        });
                });

            modelBuilder.Entity("ManyToManyApi.Models.EnrolledStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("EnrolledStudents");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            StudentName = "Janani M"
                        },
                        new
                        {
                            StudentId = 2,
                            StudentName = "Deepika M"
                        },
                        new
                        {
                            StudentId = 3,
                            StudentName = "Kesavi M"
                        });
                });

            modelBuilder.Entity("ManyToManyApi.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 101
                        },
                        new
                        {
                            StudentId = 1,
                            CourseId = 102
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 103
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 101
                        });
                });

            modelBuilder.Entity("ManyToManyApi.Models.StudentCourse", b =>
                {
                    b.HasOne("ManyToManyApi.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManyToManyApi.Models.EnrolledStudent", "EnrolledStudent")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("EnrolledStudent");
                });

            modelBuilder.Entity("ManyToManyApi.Models.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("ManyToManyApi.Models.EnrolledStudent", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
